# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
   branches:
     - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
  
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

    - name: Build with Gradle
      run: ./gradlew clean build bundle

    # - name: version
    #   run: echo "::set-output name=version::$()"
      
    - name: Upload artifact to staging
      run: mkdir staging && cp build/libs/*.jar staging
      
#     - name: Publish package
#       uses: actions/upload-artifact@v2
#       with:
#         name: demo-action
#         path: staging

#     - name: Publish package to Github packages
#       run: gradle publish
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: release
    #   uses: actions/create-release@v1
    #   id: create_release
    #   with:
    #     draft: false
    #     prerelease: false
    #     release_name: Release ${{ github.ref }}
    #     tag_name: ${{ github.ref }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: demo-action.zip

    # - name: upload linux artifact
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./demo-action.zip
    #     asset_name: demo-action.zip
    #     asset_content_type: application/zip
